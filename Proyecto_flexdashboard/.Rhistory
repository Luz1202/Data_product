colnames = c('Year','Subcategory','Product','Profit'),
options = list(dom = 't',
pageLength = 5,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2)
t_prof <- sum(mi_tienda$profit[mi_tienda$profit != 'NA' & mi_tienda$profit != " " ])
t_prof
t_prof <- sum(mi_tienda$profit[mi_tienda$profit != NA])
t_prof <- sum(mi_tienda$profit[!is.na(mi_tienda$profit)])
group_by(year) %>%
dplyr::summarise(profit = sum(profit),
sales = sum(sales))
t_prof <- mi_tienda %>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(profit),
sales = sum(sales))
mi_tienda[,c("order_date","ship_date","sales","profit","year")] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y')
))
t_prof <- mi_tienda %>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(profit),
sales = sum(sales))
View(t_prof)
View(mi_tienda)
t_prof <- mi_tienda %>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(mi_tienda$profit),
sales = sum(mi$tienda$sales))
t_prof <- mi_tienda %>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(mi_tienda$profit),
sales = sum(mi_tienda$tienda$sales))
t_prof <- mi_tienda %>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(mi_tienda$profit),
sales = sum(mi_tienda$sales))
t_prof <- mi_tienda %>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(mi_tienda$profit),
sales = sum(sales))
t_prof <- mi_tienda %>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(profit),
sales = sum(sales))
t_prof <- mi_tienda %>%
filter(!is.na(profit))%>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(profit),
sales = sum(sales))
t_prof <- mi_tienda %>%
filter(!is.na(profit)&!is.na(sales))%>%
select(year,profit,sales)%>%
group_by(year) %>%
dplyr::summarise(profit = sum(profit),
sales = sum(sales))
rm(t_prof)
rm(top10red)
mi_tienda[,c("order_date","ship_date","sales","profit","year")] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y')
))
mi_tienda <- read.csv('tienda.csv',stringsAsFactors = FALSE) %>%
rename_with( ~ tolower(gsub(".","_",.x,fixed = TRUE)))
mi_tienda[,c("order_date","ship_date","sales","profit","year")] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y')
))
mi_tienda <- read.csv('tienda.csv',stringsAsFactors = FALSE) %>%
rename_with( ~ tolower(gsub(".","_",.x,fixed = TRUE)))
mi_tienda$sales <- sub(",","",mi_tienda$sales)
mi_tienda$profit <- sub(",","",mi_tienda$profit)
mi_tienda[,c("order_date","ship_date","sales","profit","year")] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y')
))
mi_tienda[,c("order_date","ship_date","sales","profit","year",'cost')] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y'),
cost = mi_tienda$sales-mi_tienda$profit
))
View(mi_tienda)
mi_tienda$sales-mi_tienda$profit
mi_tienda[,c("order_date","ship_date","sales","profit","year",'cost')] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y'),
cost = c(mi_tienda$sales-mi_tienda$profit)
))
mi_tienda[,c("order_date","ship_date","sales","profit","year",'cost')] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y'),
cost = as.vector(mi_tienda$sales-mi_tienda$profit)
))
mi_tienda[,c("order_date","ship_date","sales","profit","year",'cost')] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y')
)) %>%
mutate(cost = sales-profit)
?plot
ggplot()
ggplot
?ggplot2
?geom_bar
data_top %>%
ggplot(aes(sub_category)) + geom_bar()
library(flexdashboard)
library(readr)
library(dplyr)
library(DT)
library(formattable)
library(ggplot2)
library(crosstalk)
mi_tienda <- read.csv('tienda.csv',stringsAsFactors = FALSE) %>%
rename_with( ~ tolower(gsub(".","_",.x,fixed = TRUE)))
mi_tienda$sales <- sub(",","",mi_tienda$sales)
mi_tienda$profit <- sub(",","",mi_tienda$profit)
mi_tienda[,c("order_date","ship_date","sales","profit","year",'cost')] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y')
)) %>%
mutate(cost = sales-profit)
## DataShared para definir los productos más rentables
data_top <- SharedData$new(mi_tienda %>%
group_by(year, sub_category,product_name) %>%
filter(!is.na(profit) &
!is.na(sales))%>%
dplyr::summarise(profit = sum(profit)/sum(cost))%>%
arrange(desc(profit)))
# Aplicación de filtros
filter_select("dt","Año",data_top,group = ~year, multiple = FALSE)
filter_select("ctr","Sub cagetegoría", data_top, group = ~sub_category, multiple = FALSE)
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategory','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = 3:4,
pageLength = 5,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold')
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategory','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(target = 1, NULL), list(target = 2, NULL)),
pageLength = 5,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold')
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategory','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list("year"=NULL),
list("sub_category" = NULL)),
pageLength = 5,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold')
?columnDefs
??columnDefs
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategory','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "year", visible = FALSE)),
pageLength = 5,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold')
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoría','Nombre del producto','Rendimiento'),
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold')
??barplot
library(graphics)
barplot(data_top, main = "profit")
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(main %>% "profit")
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(main = "profit")
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 5,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(main = "profit")
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(main = "product_name")
??barplot
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(height = "product_name")
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(height = "product_name", width = 1)
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(height = "product_name", width = 1, space = )
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold') %>%
barplot(height = "product_name", width = 1, space = NULL, main = NULL)
barplot.default(data = data_top, height = "profit")
barplot.default(height = data_top_profit)
barplot.default(height = data_top$profit)
data_top$profit
Segmentos <- mi_tienda %>%
group_by(year, segment) %>%
dplyr::summarise(Costos = sum(cost),
Ganancias = sum(profit))
Segmentos <- mi_tienda %>%
group_by(year, segment) %>%
dplyr::summarise(Costos = sum(cost),
Ganancias = sum(profit)) %>%
DT::datatable(filter = 'none',
)
Segmentos <- mi_tienda %>%
group_by(year, segment) %>%
dplyr::summarise(Costos = sum(cost),
Ganancias = sum(profit))
Segmentos <- mi_tienda %>%
group_by(year, segment)
View(Segmentos)
Segmentos <- mi_tienda %>%
select(year,segment,profit,cost)%>%
group_by(year, segment)
Segmentos <- mi_tienda %>%
filter(!is.na(profit) &
!is.na(cost) &
!is.na(year))%>%
group_by(year, segment)%>%
dplyr::summarise(Ganancias = sum(profit),
Costos = sum(cost))
Segmentos <- mi_tienda %>%
filter(!is.na(profit) &
!is.na(cost) &
!is.na(year))%>%
group_by(year, segment)%>%
dplyr::summarise(Ganancias = sum(profit),
Costos = sum(cost)) %>%
barplot(height = profit)
Segmentos <- mi_tienda %>%
filter(!is.na(profit) &
!is.na(cost) &
!is.na(year))%>%
group_by(year, segment)%>%
dplyr::summarise(Ganancias = sum(profit),
Costos = sum(cost)) %>%
barplot(height = "profit")
Segmentos <- mi_tienda %>%
filter(!is.na(profit) &
!is.na(cost) &
!is.na(year))%>%
group_by(year, segment)%>%
dplyr::summarise(Ganancias = sum(profit),
Costos = sum(cost)) %>%
ggplot(mapping = aes(x="segment",y='profit'))
Segmentos <- mi_tienda %>%
filter(!is.na(profit) &
!is.na(cost) &
!is.na(year))%>%
group_by(year, segment)%>%
dplyr::summarise(Ganancias = sum(profit),
Costos = sum(cost)) %>%
ggplot(mapping = aes(x="segment",y='profit'), type = 'bar')
# Aplicación de filtros
filter_select("dt","Año",data_top,group = ~year, multiple = FALSE, defaul = "2015")
# Aplicación de filtros
filter_select("dt","Año",data_top,group = ~year, multiple = FALSE, default = "2015")
?filter_select
library(flexdashboard)
library(readr)
library(dplyr)
library(DT)
library(formattable)
library(ggplot2)
library(graphics)
library(crosstalk)
mi_tienda <- read.csv('tienda.csv',stringsAsFactors = FALSE) %>%
rename_with( ~ tolower(gsub(".","_",.x,fixed = TRUE)))
mi_tienda$sales <- sub(",","",mi_tienda$sales)
mi_tienda$profit <- sub(",","",mi_tienda$profit)
mi_tienda[,c("order_date","ship_date","sales","profit","year",'cost')] <- as.data.frame(list(order_date = as.Date(mi_tienda$order_date,'%m/%d/%Y'),
ship_date = as.Date(mi_tienda$ship_date,'%m/%d/%Y'),
sales = as.numeric(mi_tienda$sales),
profit = as.numeric(mi_tienda$profit),
year = format(as.Date(mi_tienda$order_date,'%m/%d/%Y'),'%Y')
)) %>%
mutate(cost = sales-profit)
## DataShared para definir los productos más rentables
data_top <- SharedData$new(mi_tienda %>%
group_by(year, sub_category,product_name) %>%
filter(!is.na(profit) &
!is.na(sales))%>%
dplyr::summarise(profit = sum(profit)/sum(cost))%>%
arrange(desc(profit)))
# Aplicación de filtros
filter_select("dt","Año",data_top,group = ~year, multiple = FALSE)
filter_select("ctr","Subcategoría", data_top, group = ~sub_category, multiple = FALSE)
## Mostrar las tablas
data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold')
a
## Mostrar las tablas
a <- data_top %>%
DT::datatable(rownames = FALSE,
filter = "none",
colnames = c('Year','Subcategoria','Nombre del producto','Rendimiento'),
options = list(dom = 't',
columnDefs = list(list(targets = "year", visible = FALSE),
list(targets = "sub_category", visible = FALSE)),
pageLength = 1,
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#26580F', 'color': '#fff'});",
"}")))%>%
formatPercentage('profit',digits = 2) %>%
formatStyle('profit', backgroundColor = '#F0FFF0', fontWeight = 'bold')%>%
formatStyle('product_name',  color = 'gray', fontWeight = 'bold')
# graficar utilizando ggplot
ggplot(data = a,
mapping = aes(x = 'product_name',
y = 'profit')) +
geom_bar() +
labs(title = 'product_name')
# graficar utilizando ggplot
ggplot(data = as.data.frame(a),
mapping = aes(x = 'product_name',
y = 'profit')) +
geom_bar() +
labs(title = 'product_name')
